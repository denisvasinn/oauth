"use strict";function passwordMatcher(r){return r.get("password").value===r.get("confirm").value?null:{nomatch:!0}}var __decorate=this&&this.__decorate||function(r,o,e,t){var n,a=arguments.length,s=a<3?o:null===t?t=Object.getOwnPropertyDescriptor(o,e):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(r,o,e,t);else for(var i=r.length-1;i>=0;i--)(n=r[i])&&(s=(a<3?n(s):a>3?n(o,e,s):n(o,e))||s);return a>3&&s&&Object.defineProperty(o,e,s),s},__param=this&&this.__param||function(r,o){return function(e,t){o(e,t,r)}};exports.__esModule=!0;var core_1=require("@angular/core"),forms_1=require("@angular/forms"),SignUpComponent=function(){function r(r,o,e){this.authService=o,this.router=e,this.form=r.group({name:r.group({first:[this.user.first,forms_1.Validators.compose([forms_1.Validators.required,forms_1.Validators.minLength(2)])],last:[this.user.last,forms_1.Validators.compose([forms_1.Validators.required,forms_1.Validators.minLength(2)])]}),account:r.group({username:[this.user.username,forms_1.Validators.compose([forms_1.Validators.required,forms_1.Validators.minLength(3)])],password:[this.user.password,forms_1.Validators.compose([forms_1.Validators.required,forms_1.Validators.minLength(5)])],confirm:[this.user.confirm,forms_1.Validators.compose([forms_1.Validators.required,forms_1.Validators.minLength(5)])],email:[this.user.email,forms_1.Validators.compose([forms_1.Validators.required,forms_1.Validators.pattern(/[A-Za-z0-9-_\.]+@[\w]+\.([\w]+(\.?)){1,}/)])]},{validator:passwordMatcher})}),this.form.get("account.username").valueChanges.subscribe(function(r){console.log(r)},function(r){console.error(r)})}return r.prototype.onSubmit=function(r){var o=this;return this.form.valid?this.authService.register(this.user).subscribe(function(r){r.success&&(console.log("successfully registered"),o.router.navigate(["/login"]))},function(r){return console.log(r)}):console.log("form isnt valid"),!1},r}();SignUpComponent=__decorate([core_1.Component({selector:"sign-up-component",template:'\n    <div class="form-container clearfix">\n      <div>\n        <form class="form" [formGroup]="form" (ngSubmit)="onSubmit($event)">\n          <div formGroupName="name">\n            <label>Name</label>\n            <input class="form-control" formControlName="first" placeholder="First">\n            <input class="form-control" formControlName="last" placeholder="Last">\n          </div>\n          <div formGroupName="account">\n            <label>Account</label>\n            <input class="form-control" formControlName="username" placeholder="Username">\n            <input type="password" class="form-control" formControlName="password" placeholder="Password">\n            <input type="password" class="form-control" formControlName="confirm" placeholder="Confirm password">\n            <input class="form-control" formControlName="email" placeholder="Email">\n          </div>\n          <button class="btn">SUBMIT</button>\n        </form>\n      </div>\n      <div>\n        <p>Value: {{ form.get(\'account\').value | json }}</p>\n        <p>Validation status: {{ form.get(\'account\').status | json }}</p>\n        <p>Validation errors: {{ form.get(\'account\').errors | json }}</p>\n      </div>\n      <div class="popup" [class.active]="form.dirty && form.invalid">\n        <p>Error</p>\n        <p>All fields are required.</p>\n        <p *ngIf="form.get(\'name.first\').invalid">First name must be at least 2 characters long.</p>\n        <p *ngIf="form.get(\'name.last\').invalid">Last name must be at least 2 characters long.</p>\n        <p *ngIf="form.get(\'account.username\').invalid">Username must be at least 3 characters long.</p>\n        <p *ngIf="form.get(\'account.password\').invalid">Password must be at least 5 characters long.</p>\n        <p *ngIf="form.get(\'account.confirm\').invalid">Confirm password must be at least 5 characters long.</p>\n        <p *ngIf="form.get(\'account.email\').invalid">Wrong email.</p>\n      </div>\n    </div>\n  '}),__param(0,core_1.Inject(forms_1.FormBuilder))],SignUpComponent),exports.SignUpComponent=SignUpComponent;